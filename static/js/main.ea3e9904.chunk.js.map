{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selected","changeSelectedState","good","includes","result","filter","item","setState","selectedCopy","push","removeAll","this","className","length","join","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,SAAU,CAAC,Q,EAGbC,oBAAsB,SAACC,GACrB,IAAQF,EAAa,EAAKD,MAAlBC,SAER,GAAIA,EAASG,SAASD,GAAtB,CACE,IAAME,EAASJ,EAASK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,KAEhD,EAAKK,SAAS,CAAEP,SAAUI,SAK5B,IAAKJ,EAASG,SAASD,GAAO,CAC5B,IAAMM,EAAY,YAAOR,GAEzBQ,EAAaC,KAAKP,GAClB,EAAKK,SAAS,CAAEP,SAAUQ,M,EAI9BE,UAAY,WACV,EAAKH,SAAS,CAAEP,SAAU,M,4CAG5B,WAAU,IAAD,OACCA,EAAaW,KAAKZ,MAAlBC,SAER,OACE,sBAAKY,UAAU,YAAf,UACE,qBAAIA,UAAU,QAAd,UACGZ,EAASa,OAAS,EAAlB,0BACsBb,EAASc,KAAK,OACjC,oBACHd,EAASa,OAAS,GACjB,wBACEE,KAAK,SACLH,UAAU,4BACVI,QAAS,kBAAM,EAAKN,aAHtB,0BASJ,oBAAIE,UAAU,SAAd,SACGf,EAAgBoB,KAAI,SAAAf,GACnB,OACE,qBAEEU,UAAS,mCAELZ,EAASG,SAASD,GACpB,yBACA,IANJ,UASGA,EACD,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKf,oBAAoBC,IACxCU,UAAS,kEAGPZ,EAASG,SAASD,GACpB,aACA,WARF,SAWG,EAAKH,MAAMC,SAASG,SAASD,GAC1B,SACA,aAtBDA,e,GAnDHgB,IAAMC,WAoFTrB,ICtGfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea3e9904.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selected: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selected: ['Jam'],\n  };\n\n  changeSelectedState = (good: string): void => {\n    const { selected } = this.state;\n\n    if (selected.includes(good)) {\n      const result = selected.filter(item => item !== good);\n\n      this.setState({ selected: result });\n\n      return;\n    }\n\n    if (!selected.includes(good)) {\n      const selectedCopy = [...selected];\n\n      selectedCopy.push(good);\n      this.setState({ selected: selectedCopy });\n    }\n  };\n\n  removeAll = () => {\n    this.setState({ selected: [] });\n  };\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"level\">\n          {selected.length > 0\n            ? `Selected goods: ${selected.join(', ')}`\n            : 'No selected goods'}\n          {selected.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"button is-small is-danger\"\n              onClick={() => this.removeAll()}\n            >\n              Clear all\n            </button>\n          )}\n        </h1>\n        <ul className=\"column\">\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                key={good}\n                className={\n                  `level\n                  ${selected.includes(good)\n                ? 'has-background-success'\n                : ''}`\n                }\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  onClick={() => this.changeSelectedState(good)}\n                  className={\n                    `button\n                    is-small\n                  ${selected.includes(good)\n                ? 'is-warning'\n                : 'is-info'}`\n                  }\n                >\n                  {this.state.selected.includes(good)\n                    ? 'Remove'\n                    : 'Select'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
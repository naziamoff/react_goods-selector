{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selected","changeSelectedState","good","includes","result","filter","item","setState","prevState","removeAll","this","className","length","join","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,SAAU,CAAC,Q,EAGbC,oBAAsB,SAACC,GACrB,IAAQF,EAAa,EAAKD,MAAlBC,SAER,GAAIA,EAASG,SAASD,GAAtB,CACE,IAAME,EAASJ,EAASK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,KAEhD,EAAKK,SAAS,CAAEP,SAAUI,SAK5B,EAAKG,UAAS,SAACC,GAAD,MAAgB,CAAER,SAAS,GAAD,mBAAMQ,EAAUR,UAAhB,CAA0BE,S,EAGpEO,UAAY,WACV,EAAKF,SAAS,CAAEP,SAAU,M,4CAG5B,WAAU,IAAD,OACCA,EAAaU,KAAKX,MAAlBC,SAER,OACE,sBAAKW,UAAU,YAAf,UACE,qBAAIA,UAAU,QAAd,UACGX,EAASY,OAAS,EAAlB,0BACsBZ,EAASa,KAAK,OACjC,oBACHb,EAASY,OAAS,GACjB,wBACEE,KAAK,SACLH,UAAU,4BACVI,QAASL,KAAKD,UAHhB,0BASJ,oBAAIE,UAAU,SAAd,SACGd,EAAgBmB,KAAI,SAAAd,GAAI,OACvB,qBAEES,UAAWM,IACT,QACA,CAAE,yBAA0BjB,EAASG,SAASD,KAJlD,UAOGA,EACD,wBACEY,KAAK,SACLC,QAAS,kBAAM,EAAKd,oBAAoBC,IACxCS,UAAWM,IACT,kBAAmB,CACjB,aAAcjB,EAASG,SAASD,GAChC,WAAYF,EAASG,SAASD,KANpC,SAUG,EAAKH,MAAMC,SAASG,SAASD,GAC1B,SACA,aAnBDA,e,GA7CDgB,IAAMC,WA0ETrB,IC7FfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ddf2289b.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selected: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selected: ['Jam'],\n  };\n\n  changeSelectedState = (good: string): void => {\n    const { selected } = this.state;\n\n    if (selected.includes(good)) {\n      const result = selected.filter(item => item !== good);\n\n      this.setState({ selected: result });\n\n      return;\n    }\n\n    this.setState((prevState) => ({ selected: [...prevState.selected, good] }));\n  };\n\n  removeAll = () => {\n    this.setState({ selected: [] });\n  };\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"level\">\n          {selected.length > 0\n            ? `Selected goods: ${selected.join(', ')}`\n            : 'No selected goods'}\n          {selected.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"button is-small is-danger\"\n              onClick={this.removeAll}\n            >\n              Clear all\n            </button>\n          )}\n        </h1>\n        <ul className=\"column\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'level',\n                { 'has-background-success': selected.includes(good) },\n              )}\n            >\n              {good}\n              <button\n                type=\"button\"\n                onClick={() => this.changeSelectedState(good)}\n                className={classNames(\n                  'button is-small', {\n                    'is-warning': selected.includes(good),\n                    'is-info': !selected.includes(good),\n                  },\n                )}\n              >\n                {this.state.selected.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// `button\n//                     is-small\n//                   ${selected.includes(good)\n//               ? 'is-warning'\n//               : 'is-info'}`\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}